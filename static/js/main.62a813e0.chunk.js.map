{"version":3,"sources":["actions/auth.jsx","actions/types.jsx","components/Login.jsx","components/ChannelInfo.jsx","components/Videos/VideoCard.jsx","components/Videos/VideosContainer.jsx","components/Home.jsx","common/PrivateRoute.jsx","App.js","serviceWorker.js","reducers/auth.jsx","index.js"],"names":["SCOPE_YOUTUBE","playlistId","initClient","window","gapi","client","init","apikey","process","client_id","scope","fetch_basic_profile","then","auth2","getAuthInstance","isSignedIn","listen","loadClient","load","console","log","err","error","loadClientAnalytics","execute","dispatch","youtube","channels","list","part","mine","response","result","items","contentDetails","relatedPlaylists","uploads","type","payload","statistics","getVideos","playlistItems","executeAnalytics","youtubeAnalytics","reports","query","ids","startDate","endDate","metrics","dimensions","sort","Login","login","this","props","isAuthenticated","to","className","onClick","Component","connect","state","auth","signIn","prompt","ChannelInfo","channelInfo","content","subscriberCount","videoCount","viewCount","VideoCard","onClickApprove","e","approveVideo","target","id","onClickDisapprove","disapproveVideo","video","button","approvedVideos","includes","snippet","resourceId","videoId","key","style","width","title","src","frameBorder","allow","allowFullScreen","description","moment","publishedAt","format","VideosContainer","videos","length","map","Home","alert","signOut","component","rest","render","isLoading","role","App","exact","path","Boolean","location","hostname","match","initialState","analytics","authReducer","action","channel","filter","middleware","thunk","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62a813e0.chunk.js","sourcesContent":["import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  FETCH_ANALYTICS,\n  FETCH_VIDEOS,\n  APPROVE_VIDEO,\n  DISAPPROVE_VIDEO,\n  FETCH_PLAYLIST_ID\n} from './types';\n\nconst SCOPE_YOUTUBE = 'https://www.googleapis.com/auth/youtube.readonly';\nconst SCOPE_YT_ANALYTICS =\n  'https://www.googleapis.com/auth/yt-analytics.readonly';\nlet playlistId = '';\n\n// let isAuthorized;\n// let currentApiRequest;\nlet GoogleAuth;\n\nexport const handleClientLoad = () => {\n  window.gapi.load('client:auth2', initClient);\n};\n\nexport const initClient = () => {\n  //initialize google auth\n  window.gapi.client\n    .init({\n      apikey: process.env.REACT_APP_GOOGLE_API_KEY,\n      client_id: process.env.REACT_APP_CLIENT_ID,\n      scope: SCOPE_YOUTUBE + ' ' + SCOPE_YT_ANALYTICS,\n      fetch_basic_profile: false\n    })\n    .then(() => {\n      GoogleAuth = window.gapi.auth2.getAuthInstance();\n      // Listen for sign-in state changes.\n      GoogleAuth.isSignedIn.listen();\n    });\n};\n\n// export const authInit = () => {\n//   //initialize google auth\n//   window.gapi.load('client:auth2', function() {\n//     window.gapi.auth2.init({\n//       client_id: process.env.REACT_APP_CLIENT_ID,\n//       scope: SCOPE_YOUTUBE + ' ' + SCOPE_YT_ANALYTICS,\n//       fetch_basic_profile: false\n//     })\n//   });\n// };\n\nexport const login = () => dispatch => {\n  return (GoogleAuth = window.gapi.auth2\n    .getAuthInstance()\n    .signIn({\n      scope: SCOPE_YOUTUBE + ' ' + SCOPE_YT_ANALYTICS,\n      prompt: 'select_account'\n    })\n    .then(\n      function() {\n        console.log('Sign-in successful');\n        dispatch({\n          type: LOGIN_SUCCESS\n        });\n      },\n      function(err) {\n        console.error('Error signing in', err);\n        dispatch({\n          type: LOGIN_FAIL\n        });\n      }\n    ));\n};\n\nexport const getExecute = () => {\n  loadClient()\n    .then(execute)\n    .then(getVideos);\n  loadClientAnalytics().then(executeAnalytics);\n};\n\nexport const loadClient = () => {\n  // window.gapi.client.setApiKey(process.env.REACT_APP_GOOGLE_API_KEY);\n  return window.gapi.client\n    .load('https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest')\n    .then(\n      function() {\n        console.log('GAPI client loaded for API');\n      },\n      function(err) {\n        console.error('Error loading GAPI client for API', err);\n      }\n    );\n};\n\nexport const loadClientAnalytics = () => {\n  // window.gapi.client.setApiKey(process.env.REACT_APP_GOOGLE_API_KEY);\n  return window.gapi.client.load(\n    'https://youtubeanalytics.googleapis.com/$discovery/rest?version=v2'\n  );\n};\n\nexport const execute = () => dispatch => {\n  return window.gapi.client.youtube.channels\n    .list({\n      part: 'snippet,contentDetails,statistics',\n      mine: true\n    })\n    .then(\n      function(response) {\n        // Handle the results here (response.result has the parsed body).\n        playlistId =\n          response.result.items[0].contentDetails.relatedPlaylists.uploads;\n        dispatch({\n          type: FETCH_PLAYLIST_ID,\n          payload: response.result.items[0].statistics\n        });\n      },\n      function(err) {\n        console.error('Execute error', err);\n      }\n    );\n};\n\nexport const getVideos = () => dispatch => {\n  return window.gapi.client.youtube.playlistItems\n    .list({\n      part: 'snippet,contentDetails',\n      playlistId: playlistId\n    })\n    .then(\n      function(response) {\n        dispatch({\n          type: FETCH_VIDEOS,\n          payload: response.result.items\n        });\n        // Handle the results here (response.result has the parsed body).\n      },\n      function(err) {\n        console.error('Execute error', err);\n      }\n    );\n};\n\nexport const executeAnalytics = () => dispatch => {\n  return window.gapi.client.youtubeAnalytics.reports\n    .query({\n      ids: 'channel==MINE',\n      startDate: '2019-01-01',\n      endDate: '2019-12-31',\n      metrics:\n        'views,estimatedMinutesWatched,averageViewDuration,averageViewPercentage',\n      dimensions: 'day',\n      sort: 'day'\n    })\n    .then(\n      function(response) {\n        // Handle the results here (response.result has the parsed body).\n        dispatch({\n          type: FETCH_ANALYTICS,\n          payload: response.result\n        });\n      },\n      function(err) {\n        console.error('Execute error', err);\n      }\n    );\n};\n\nexport const signOut = () => dispatch => {\n  dispatch({\n    type: LOGOUT_SUCCESS\n  });\n};\n\nexport const approveVideo = id => dispatch => {\n  dispatch({\n    type: APPROVE_VIDEO,\n    payload: id\n  });\n};\n\nexport const disapproveVideo = id => dispatch => {\n  dispatch({\n    type: DISAPPROVE_VIDEO,\n    payload: id\n  });\n};\n\n// Google auth sign in\n// export const handleClientLoad = () => {\n//   console.log('handleClientLoad');\n//   window.gapi.load('client:auth2', initClient);\n// };\n\n// export const initClient = () => {\n//   //initialize google auth\n//   console.log('initClient');\n//   window.gapi.client\n//     .init({\n//       apikey: process.env.REACT_APP_GOOGLE_API_KEY,\n//       client_id: process.env.REACT_APP_CLIENT_ID,\n//       scope: SCOPE_YOUTUBE + ' ' + SCOPE_YT_ANALYTICS,\n//       fetch_basic_profile: false\n//     })\n//     .then(() => {\n//       GoogleAuth = window.gapi.auth2.getAuthInstance();\n//       // Listen for sign-in state changes.\n//       GoogleAuth.isSignedIn.listen(updateSigninStatus);\n//     });\n// };\n\n// function sendAuthorizedApiRequest(requestDetails) {\n//   console.log('sendAuthorizedApiRequest');\n//   currentApiRequest = requestDetails;\n//   if (isAuthorized) {\n//     console.log('APIREQUEST');\n//     // execute.then(getVideos);\n//     // loadClientAnalytics().then(executeAnalytics);\n//     // currentApiRequest = {};\n//   } else {\n//     GoogleAuth.signIn({ prompt: 'select_account' });\n//   }\n// }\n\n// function updateSigninStatus(isSignedIn) {\n//   console.log('isSignedIn', isSignedIn);\n//   if (isSignedIn) {\n//     isAuthorized = true;\n//     if (currentApiRequest) {\n//       sendAuthorizedApiRequest(currentApiRequest);\n//     }\n//   } else {\n//     isAuthorized = false;\n//   }\n// }\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const FETCH_ANALYTICS = 'FETCH_ANALYTICS';\nexport const FETCH_VIDEOS = 'FETCH_VIDEOS';\nexport const FETCH_CHANNEL = 'FETCH_CHANNEL';\nexport const FETCH_PLAYLIST_ID = 'FETCH_PLAYLIST_ID';\nexport const APPROVE_VIDEO = 'APPROVE_VIDEO';\nexport const DISAPPROVE_VIDEO = 'DISAPPROVE_VIDEO';\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login, handleClientLoad } from '../actions/auth';\nclass Login extends Component {\n  componentDidMount() {\n    handleClientLoad();\n    // authInit();\n  }\n\n  // onClick = () => {\n  //   handleClientLoad();\n  // };\n\n  render() {\n    const { login } = this.props;\n    if (this.props.isAuthenticated) {\n      return <Redirect to='/' />;\n    }\n    return (\n      <div className='container'>\n        <div className='row justify-content-center'>\n          <h2>Sign in required to access the videos</h2>\n        </div>\n        <div className='row justify-content-center'>\n          <button\n            onClick={login}\n            type='button'\n            className='btn btn-outline-primary mx-auto'\n          >\n            Sign In with Google\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React, { Component } from 'react';\n\nexport class ChannelInfo extends Component {\n  render() {\n    const { channelInfo } = this.props;\n    let content = '';\n    if (channelInfo) {\n      content = (\n        <ul className='list-group list-group-horizontal'>\n          <li className='list-group-item'>{`Number of Subscribers: ${channelInfo.subscriberCount}`}</li>\n          <li className='list-group-item'>{`Number of Vidoes: ${channelInfo.videoCount}`}</li>\n          <li className='list-group-item'>{`Number of Views: ${channelInfo.viewCount}`}</li>\n        </ul>\n      );\n    }\n\n    return <div className='row'>{content}</div>;\n  }\n}\n\nexport default ChannelInfo;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { approveVideo, disapproveVideo } from '../../actions/auth';\n\nexport class VideoCard extends Component {\n  onClickApprove = e => {\n    this.props.approveVideo(e.target.id);\n  };\n  onClickDisapprove = e => {\n    this.props.disapproveVideo(e.target.id);\n  };\n\n  render() {\n    const { video, approvedVideos } = this.props;\n    let button = '';\n    if (approvedVideos.includes(video.snippet.resourceId.videoId)) {\n      button = (\n        <button\n          id={video.snippet.resourceId.videoId}\n          onClick={this.onClickDisapprove}\n          className='btn btn-outline-danger'\n        >\n          Disapprove\n        </button>\n      );\n    } else {\n      button = (\n        <button\n          id={video.snippet.resourceId.videoId}\n          onClick={this.onClickApprove}\n          className='btn btn-outline-success'\n        >\n          Approve\n        </button>\n      );\n    }\n\n    return (\n      <div\n        key={video.snippet.resourceId.videoId}\n        className='card'\n        style={{ width: '18rem' }}\n      >\n        <iframe\n          title={`youtube${video.snippet.resourceId.videoId}`}\n          className='embed-responsive-item'\n          src={`https://www.youtube.com/embed/${video.snippet.resourceId.videoId}`}\n          frameBorder='0'\n          allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\n          allowFullScreen\n        ></iframe>\n\n        <div className='card-body'>\n          <h5 className='card-title'>{video.snippet.title}</h5>\n          <p className='card-text text-truncate'>\n            {video.snippet.description}\n            <small className='text-muted'>\n              {moment(video.snippet.publishedAt).format('MMM DD, YYYY')}\n            </small>\n          </p>\n        </div>\n        <div className='card-footer'>{button}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    approvedVideos: state.auth.approvedVideos\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { approveVideo, disapproveVideo }\n)(VideoCard);\n","import React, { Component } from 'react';\n\nimport VideoCard from './VideoCard';\n\nexport class VideosContainer extends Component {\n  render() {\n    const { videos } = this.props;\n    let content = '';\n\n    if (videos && videos.length) {\n      content = videos.map(video => (\n        <VideoCard key={video.snippet.resourceId.videoId} video={video} />\n      ));\n    }\n\n    return <div className='row'>{content}</div>;\n  }\n}\n\nexport default VideosContainer;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  loadClient,\n  loadClientAnalytics,\n  execute,\n  getVideos,\n  executeAnalytics,\n  signOut\n} from '../actions/auth';\nimport { ChannelInfo } from './ChannelInfo';\nimport { VideosContainer } from './Videos/VideosContainer';\n\nexport class Home extends Component {\n  async componentDidMount() {\n    if (this.props.isAuthenticated) {\n      loadClient()\n        .then(this.props.execute)\n        .then(this.props.getVideos);\n      loadClientAnalytics().then(this.props.executeAnalytics);\n    }\n  }\n\n  onClick = e => {\n    if (this.props.approvedVideos.length) {\n      alert(\n        `the following (${this.props.approvedVideos.length}) videos are approved and submitted! ${this.props.approvedVideos}`\n      );\n    } else {\n      alert('Please approve videos!');\n    }\n  };\n\n  render() {\n    const { videos, isAuthenticated, playlistId } = this.props;\n    if (!isAuthenticated) {\n      return <Redirect to='/login' />;\n    }\n\n    return (\n      <div className='container'>\n        <div className='row'>\n          <button\n            type='button'\n            className='btn btn-outline-secondary'\n            onClick={this.props.signOut}\n          >\n            Sign Out\n          </button>\n        </div>\n        <div className='row'>\n          <h5>Channel Info</h5>\n        </div>\n        <div className='row'>\n          <ChannelInfo channelInfo={playlistId} />\n        </div>\n        <div className='row'>\n          <h5>Videos for Approval</h5>\n        </div>\n        <div className='card-deck'>\n          <div className='row'>\n            <VideosContainer videos={videos} />\n          </div>\n        </div>\n        <div className='row'>\n          <button\n            type='button'\n            onClick={this.onClick}\n            className='btn btn-outline-primary'\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    videos: state.auth.videos,\n    playlistId: state.auth.playlistId,\n    approvedVideos: state.auth.approvedVideos\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    execute,\n    executeAnalytics,\n    getVideos,\n    signOut\n  }\n)(Home);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (auth.isLoading) {\n        // add spinner\n        return (\n          <div className='spinner-border' role='status'>\n            <span className='sr-only'>Loading...</span>\n          </div>\n        );\n      } else if (!auth.isAuthenticated) {\n        return <Redirect to='/login' />;\n      } else {\n        return <Component {...props} />;\n      }\n    }}\n  />\n);\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport PrivateRoute from './common/PrivateRoute';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Switch>\n            <Route exact path='/login' component={Login} />\n            <PrivateRoute exact path='/' component={Home} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  FETCH_ANALYTICS,\n  FETCH_VIDEOS,\n  APPROVE_VIDEO,\n  DISAPPROVE_VIDEO,\n  FETCH_PLAYLIST_ID\n} from '../actions/types';\n\nconst initialState = {\n  isAuthenticated: null,\n  analytics: null,\n  videos: [],\n  approvedVideos: [],\n  playlistId: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        videos: [],\n        analytics: null,\n        channel: null,\n        approvedVideos: [],\n        playlistId: null\n      };\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        videos: [],\n        approvedVideos: [],\n        playlistId: null,\n        isAuthenticated: false\n      };\n    case FETCH_ANALYTICS:\n      return {\n        ...state,\n        analytics: action.payload\n      };\n    case FETCH_VIDEOS:\n      return {\n        ...state,\n        videos: action.payload\n      };\n    case FETCH_PLAYLIST_ID:\n      return {\n        ...state,\n        playlistId: action.payload\n      };\n    case APPROVE_VIDEO:\n      return {\n        ...state,\n        approvedVideos: [...state.approvedVideos, action.payload]\n      };\n    case DISAPPROVE_VIDEO:\n      return {\n        ...state,\n        approvedVideos: state.approvedVideos.filter(\n          video => action.payload !== video\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport auth from './reducers/auth';\n\n// const saveToLocalStorage = state => {\n//   try {\n//     const serializedState = JSON.stringify(state);\n//     localStorage.setItem('state', serializedState);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n// const loadFromLocalStorage = () => {\n//   try {\n//     const serializedState = localStorage.getItem('state');\n//     if (serializedState === null) return undefined;\n//     return JSON.parse(serializedState);\n//   } catch (err) {\n//     console.log(err);\n//     return undefined;\n//   }\n// };\n\nconst middleware = [thunk];\n\nconst rootReducer = combineReducers({\n  auth\n});\n\n// const persistedState = loadFromLocalStorage();\n\nconst store = createStore(\n  rootReducer,\n  // persistedState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n// store.subscribe(() => saveToLocalStorage(store.getState()));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}